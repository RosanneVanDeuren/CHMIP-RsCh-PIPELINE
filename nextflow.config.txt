// Global default parameters.

params {

  // Specify parameters.
  cohort = "testCH"								// Name of your cohort that will be used for naming some of the output files.
  JSImerged_file = "testCH_JSImerged.txt"		// Input JSImerged-file with candidate variant calls for all samples.
  sampleIDs_file = "testCH_samples.txt"			// Input sampleIDs for which JSI candidate variant calls were merged in JSImerged-file.
  bams_suffix = ".sorted.hfix.bam"				// Bamfile suffix of the bamfiles in the input/bams folder.
  coverage_threshold = 500						// Coverage threshold over the entire CHMIP-panel.
  artifacts = "all"								// Parameter that specifies whether all (common + run-specific) or only common run-artifacts should be excluded. Options: all | common.
  
  // Path parameters.
  mainDir = "/mnt/workspace/pipelines/CHMIP-RsCh-PIPELINE/"
  input_bams_path = "${mainDir}input/bams/"
  input_JSI_path = "${mainDir}input/JSI/"
  input_sampleIDs_path = "${mainDir}input/samples/"
  reference_path = "${mainDir}references/"
  output_path = "${mainDir}output/"
  script_path = "${mainDir}bin/"

  // Reference parameters.
  reference_targetCallingFile = "targetCallingFile_CHmips.bed"
  reference_commonArtifacts = "referenceFile_commonRunArtifacts_20211029.txt"
  reference_knownDrivers = "referenceFile_knownDrivers_20211029.txt"
  reference_inspectionFlags = "referenceFile_inspectionFlags_20211101.txt"
  reference_hg19 = "${mainDir}references/hg19/ref_hg19.fasta"

  // Output parameters.
  output_coverages = "coverages/"
  output_JSI_excl = "JSI/excl/"
  output_JSI_intermediate = "JSI/intermediate/"
  output_JSI_final = "JSI/final/"
  output_mpileups = "mpileups/"

  // Script parameters.
  script_parseCoverages = "PythonScript.CHMIP-RsCh-PIPELINE.parseCoverages.py"
  script_averageCoverages = "PythonScript.CHMIP-RsCh-PIPELINE.averageCoverages.py"
  script_coverageFilter = "PythonScript.CHMIP-RsCh-PIPELINE.coverageFilter.py"
  script_checkDuplicateCalls = "PythonScript.CHMIP-RsCh-PIPELINE.extractDuplicateCalls.py"
  script_selectCodingNonsynSomatic = "PythonScript.CHMIP-RsCh-PIPELINE.selectCodingNonsynSomatic.py"
  script_allRunArtifacts = "PythonScript.CHMIP-RsCh-PIPELINE.excludeRunArtifacts.py"
  script_commonRunArtifacts = "PythonScript.CHMIP-RsCh-PIPELINE.excludeRunArtifacts_onlyCommon.py"
  script_finetuneCandidateCalls = "PythonScript.CHMIP-RsCh-PIPELINE.finetuneCandidateCalls.py"
  script_preprocessMpileups = "PythonScript.CHMIP-RsCh-PIPELINE.preprocessMpileups.py"
  script_parseMpileups = "PerlScript.CHMIP-RsCh-PIPELINE.pileup2baseindel.no.strand.pl"
  script_concludeMpileupVAFs = "PythonScript.CHMIP-RsCh-PIPELINE.concludeMpileupVAFs.py"
  script_integrateMpileupVAFs = "PythonScript.CHMIP-RsCh-PIPELINE.integrateMpileupVAFfinalJSIvariants.py"
  
  // Miscellaneous parameters.
  running_date = new java.util.Date().format("yyyy-MM-dd")

}

// Singularity settings.
singularity {
  enabled = true
  cacheDir = "/mnt/workspace/containers/"
  autoMounts = true
}

// Singularity containers.
process {
  withName:bedtoolsCoverage {
    container = "bedtools_v2.29.2.sif"
    stageInMode = "copy"
  }
  withName:parseCoverages {
    container = "python-v2.7-sys-np-pd-pysam.sif"
    stageInMode = "copy"
  }
  withName:averageCoverages {
    container = "python-v2.7-sys-np-pd-pysam.sif"
    stageInMode = "copy"
  }
  withName:coverageFilter {
    container = "python-v2.7-sys-np-pd-pysam.sif"
    stageInMode = "copy"
  }
  withName:checkDuplicateCalls {
    container = "python-v2.7-sys-np-pd-pysam.sif"
    stageInMode = "copy"
  }
  withName:selectCodingNonsynSomatic {
    container = "python-v2.7-sys-np-pd-pysam.sif"
    stageInMode = "copy"
  }
  withName:excludeRunArtifacts {
    container = "python-v2.7-sys-np-pd-pysam.sif"
    stageInMode = "copy"
  }
  withName:finetuneCandidateCalls {
    container = "python-v2.7-sys-np-pd-pysam.sif"
    stageInMode = "copy"
  }
  withName:samtoolsMpileup {
    container = "samtools_1.11.sif"
	stageInMode = "copy"
  }
  withName:preprocessMpileups {
    container = "python-v2.7-sys-np-pd-pysam.sif"
	stageInMode = "copy"
  }
  withName:parseMpileups {
    container = "perl_5.18.4-threaded-stretch.sif"
	stageInMode = "copy"
  }
  withName:concludeMpileups {
    container = "python-v2.7-sys-np-pd-pysam.sif"
	stageInMode = "copy"
  }
  withName:integrateMpileupVAFs {
    container = "python-v2.7-sys-np-pd-pysam.sif"
	stageInMode = "copy"
  }
}

// Trace settings.
trace {
  enabled = true
  file = "${params.output_path}${params.cohort}.CHMIP-RsCh-PIPELINE.traceReport.${params.running_date}.txt"
  fields = "process,tag,task_id,hash,status,exit,realtime,container,script"
}

// Manifest.
manifest {
  name = "CHMIP-RsCh-PIPELINE"
  author = "Rosanne C. van Deuren"
  homePage = "https://github.com/RosanneVanDeuren/CHMIP-RsCh-PIPELINE.git"
  description = "A clonal hematopoiesis somatic variant filtering pipeline for single-molecule Molecular Inversion Probe sequencing data."
  mainScript = "main.nf"
  version = "1.0.0"
}

// Clean working directory after running.
cleanup = true

